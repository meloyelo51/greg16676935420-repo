ZGlmZiAtLWdpdCBhL2RvY3MvU0VUVVBfTkVXX0NIQVQubWQgYi9kb2NzL1NFVFVQX05FV19DSEFULm1kCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0Ci0tLSAvZGV2L251bGwKKysrIGIvZG9jcy9TRVRVUF9ORVdfQ0hBVC5tZAor
KysgQEBAICwwICsxLDg2IEBAQAojIFNldHVwOiBTdGFydGluZyBhIE5ldyBDaGF0L1Byb2plY3Qgd2l0aCBH
cmVnCisKIyBUTDtEUgorLSBDaGF0cyBoYXZlIG5vIGNyb3NzLXNlc3Npb24gbWVtb3J5OyB0aGUgKipyZXBv
IGlzIHRoZSBzb3VyY2Ugb2YgdHJ1dGgqKi4KKy0gQWRkL21haW50YWluIGAuYWkvYXNzaXN0YW50LWNvbnRl
eHQubWRgIGluIGVhY2ggcHJvamVjdCByZXBvLgorLSBQcmVmZXIgZGVsaXZlcnkgdmlhICoqR2l0IHBhdGNo
ZXMqKi4gSWYgbm90IHN1aXRhYmxlLCB1c2UgQmFzaC9Qb3dlclNoZWxsIGluc3RhbGxlcnMuCisKIyBPbmUt
VGltZSBHbG9iYWwgU2V0dXAKKzEuIEVuc3VyZSB5b3UgY2FuIHB1c2ggdG8geW91ciBHaXRIdWIgcmVwbyAo
cmVtb3RlIGNvbmZpZ3VyZWQ7IGNvcnJlY3QgYnJhbmNoKS4KKzIuIChPcHRpb25hbCkgSW5zdGFsbCBHaXRIdWIgQ0xJOiBodHRwczovL2NsaS5naXRodWIuY29tLworCisjIFBlci1Qcm9qZWN0IEJvb3RzdHJhcAorMS4gQ3JlYXRlIG9yIHVwZGF0ZSBgLmFpL2Fzc2lzdGFudC1jb250ZXh0Lm1kYCBpbiB5b3VyIHByb2plY3Q6CisgICBgYGAKKyAgICMgQXNzaXN0YW50IENvbnRleHQKKyAgIFJlcG86IDxvd25lci88cmVwbz4KKyAgIFByZWZlcnJlZCBicmFuY2g6IG1haW4KKyAgIERlbGl2ZXJ5OiBHaXQgcGF0Y2hlcyBmaXJzdCAoaW5jbHVkZSBwYXRjaCBjb250ZW50ICsgZmlsZS1jcmVhdGlvbiBjb21tYW5kcyksIHRoZW4gYXBwbHkgc3RlcHMuCisgICBOb3RlczogY29kaW5nIHN0YW5kYXJkcywgdGVjaCB2ZXJzaW9ucywgcGF0aHMsIGV0Yy4KKyAgIGBgYAorMi4gQ29tbWl0IGFuZCBwdXNoIHRoYXQgZmlsZS4KKworIyBTdGFydGluZyBhIEJyYW5kIE5ldyBDaGF0CisgUGFzdGUgdGhpcyBhcyB5b3VyIGZpcnN0IG1lc3NhZ2U6CisjIyMjCiBSZXBvOiA8b3duZXIvPHJlcG8+CkJyYW5jaDogbWFpbiAob3IgZmVhdHVyZS88c29tZXRoaW5nPikKU291cmNlIG9mIHRydXRoOiB0aGUgcmVwbwpEZWxpdmVyeTogR2l0IHBhdGNoZXMgZmlyc3QgKHByb3ZpZGUgcGF0Y2ggKyBvbmUtbGluZXJzIHRvIGNyZWF0ZSBpdCksIHRoZW4gYXBwbHkgY29tbWFuZHMuCkZsLiAuYWkvYXNzaXN0YW50LWNvbnRleHQubWQgZXhpc3RzLCByZWFkIGFuZCBmb2xsb3cgaXQuCisjIyMjCisKIyBUeXBpY2FsIFBhdGNoIEFwcGx5IEZsb3cKK2BgYGJhc2gKK2dpdCBzdGF0dXMgLS1wb3JjZWxhaW4KK2dpdCBmZXRjaCBvcmlnaW4KK2dpdCBjaGVja291dCAtYiBmZWF0dXJlL2dyZWctd29yayBvcmlnaW4vbWFpbgorZ2l0IGFwcGx5IC0tY2hlY2sgY2hhbmdlcy5wYXRjaAorZ2l0IGFwcGx5IC0taW5kZXggY2hhbmdlcy5wYXRjaCB8fCBnaXQgYXBwbHkgLS0zd2F5IC0taW5kZXggY2hhbmdlcy5wYXRjaAorZ2l0IGNvbW1pdCAtbSAiQXBwbHkgR3JlZyBwYXRjaCIKK2dpdCBwdXNoIC11IG9yaWdpbiBmZWF0dXJlL2dyZWctd29yaworYGBgCisKIyBXaGVuIFRoaW5ncyBEaXZlcmdlCisvIFRyeSAzLXdheSBtZXJnZTogYGdpdCBhcHBseSAtLTMtd2F5YCAob3IgYGdpdCBhbSAtM2AgZm9yIGZvcm1hdC1wYXRjaGVzKS4KKy8gSWYgaHVua3MgZmFpbCwgaW5zcGVjdGAucmVqYCBmaWxlcyBhbmQgbWVyZ2UgYnkgbmFuZC4KKy8gRm9yIGJpbmFyaWVzL2xhcmdlIGZpbGVzLCBhc2sgR3JlZyBmb3IgQmFzZTY0IG9yIGluc3RhbGxlciBzY3JpcHRzLgorCmRpZmYgLS1naXQgYS9kb2NzL0lNUE9SVF9FWElTVElOR19QUk9KRUNUUy5tZCBiL2RvY3MvSU1QT1JUX0VYSVNUSU5HX1BST0pFQ1RTLm1kCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Ci0tLSAvZGV2L251bGwKKysrIGIvZG9jcy9JTVBPUlRfRVhJU1RJTkdfUFJPSkVDVFMubWQKKysrIEBAQCAwLDArMSwxMTIgQEBAQCMgSW1wb3J0aW5nIEV4aXN0aW5nIFByb2plY3RzIGludG8gYSBOZXcgQ2hhdAorCiMjIEdvYWxzCisgLSBNYWtlIGEgbmV3IGNoYXQgYXdhcmUgb2YgeW91ciBwcm9qZWN0IHdpdGhvdXQgcmVseWluZyBvbiBjaGF0IG1lbW9yeS4KKyAtIEtlZXAgdGhlIHJlcG8gYXMgdGhlIHNpbmdsZSBzb3VyY2Ugb2YgdHJ1dGguCisKIyBQcmVyZXF1aXNpdGVzCisgLSBZb3VyIHJlcG8gaXMgdXAgdG8gZGF0ZSBvbiBHaXRIdWIuCisgLSBPcHRpb25hbCBib290c3RyYXAgZmlsZTogYC5haS9hc3Npc3RhbnQtY29udGV4dC5tZGAgaW4gdGhlIHJlcG8gcm9vdC4KKworIyBTdGVwcworMSkgKipDb25maXJtIGxhdGVzdCBjb2RlIGlzIHB1c2hlZCoqCisjYGBiYXNoCmdpdCBzdGF0dXMKZ2l0IGFkZCAtQQpnaXQgY29tbWl0IC1tICJTeW5jIGJlZm9yZSBoYW5kb2ZmIiB8fCB0cnVlCmdpdCBwdXNoIG9yaWdpbiBtYWluCisjYGBgCisKMikgKipDcmVhdGUvdXBkYXRlIGAuaWkvYXNzaXN0YW50LWNvbnRleHQubWRgKiogKHJlY29tbWVuZGVkKQorYGBgCiMgQXNzaXN0YW50IENvbnRleHQKUmVwbzogPG93bmVyLzxyZXBvPgpQcmltYXJ5IGJyYW5jaDogbWFpbgpXb3JraW5nIGJyYW5jaDogZmVhdHVyZS9ncmVnLXdvcmsKRGVsaXZlcnkgcHJlZmVyZW5jZTogR2l0IHBhdGNoZXMgZmlyc3Q7IHRoZW4gQmFzaC9Qb3dlclNoZWxsIGluc3RhbGxlciBpZiBuZWVkZWQuClByb2plY3QgZ29hbHM6IC4uLgpDdXJyZW50IHRhc2tzOiAuLi4KU3RhbmRhcmRzOiBQSFAvV1AgdmVyc2lvbnMsIGxpbmRlcnMsIGxpbmUgZW5kaW5ncywgZXRjLgorYGBgCisKMykgKipCb290c3RyYXAgdGhlIG5ldyBjaGF0KioKUGFzdGU6CisjIyMjClJlcG86IDxvd25lci88cmVwbz4KQnJhbmNoOiBtYWluIChvciBmZWF0dXJlL2dyZWctd29yaykKRGVsaXZlcnk6IEdpdCBwYXRjaGVzIGZpcnN0IChpbmNsdWRlIHBhdGNoIGNvbnRlbnQgKyBjcmVhdGUtZmlsZSBjb21tYW5kcykuClBsZWFzZSByZWFkIGAuYWkvYXNzaXN0YW50LWNvbnRleHQubWRgIGZvciBzY29wZS9nb2Fscy4KKworNCAqKklmIG5vdCByZXBvLWZpcnN0KioKKy0gUHJvdmlkZSB0aGUgcmVwbyBVUkwgYW5kIGJyYW5jaCBleHBsaWNpdGx5LgorLSBQYXN0ZSBhbnkgY3JpdGljYWwgZmlsZSBwYXRocy9zdHJ1Y3R1cmUgR3JlZyBzaG91bGQgYmUgYXdhcmUgb2YuCisgLSBHcmVnIHdpbGwgc3RpbGwgZGVsaXZlciBjaGFuZ2VzIGFzIGEgcGF0Y2ggeW91IGNhbiBhcHBseSBhbmQgcHVzaC4KKworIyBWZXJpZmljYXRpb24KKy0gQXNrIEdyZWcgdG8gcHJvZHVjZSBhIHNtYWxsIG5vLW9wIHBhdGNoIChlLmcuLCBhZGAgZG9jcy9oZWxsby50eHRgKSBhbmQgYXBwbHkuaC4KKy0gT3BlbiBhIFBSIGZyb20geW91ciBmZWF0dXJlIGJyYW5jaCB0byBjb25maXJtIGVuZC10by1lbmQuCisKIyMjIFRyb3VibGVzaG9vdGluZworLSBDb250ZXh0IGNoYW5nZXM/IFVzZSAiLS0zd2F5IiBvciByZWJhc2UgdG8gdGhlIGJhc2UgY29tbWl0IHRhcmdldGVkLgorLSBCaW5hcnkgYXNzZXRzPyBBc2sgZm9yIEJhc2U2NCBvciBpbnN0YWxsZXIgc2NyaXB0cy4KCmRpZmYgLS1naXQgYS9kb2NzL0FVQk9UX0dSRUdfUkVQTy5tZCBiL2RvY3MvQVVCT1RfR1JFR19SRVBPLm1kCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Ci0tLSAvZGV2L251bGwKKysrIGIvZG9jcy9BVUJPVF9HUkVHX1JFUE8ubWQKKysrIEBAQCAwLDArMSw5MiBAQEAKIyBBYm91dCBUaGlzIFJlcG8gKEdyZWcgSGVscGVyKQorCioqIFB1cnBvc2UKKzEgSG9zdCBvbmJvYXJkaW5nIGRvY3MgYW5kIGV4YW1wbGVzIGZvciB3b3JraW5nIHdpdGggR3JlZyAodGhlIGFzc2lzdGFudCkuCisxLiBQcm92aWRlIGNvcHktcGFzdGVhYmxlIHBhdGNoL2FwcGx5IGZsb3dzIGFuZCBzYW1wbGUgc2NhZmZvbGRpbmcuCisxLiBTZXJ2ZSBhcyBhIHNhbmRib3ggdG8gdGVzdCBHcmVn4oCZcyBkZWxpdmVyeSBtZXRob2RzIChwYXRjaGVzLCBpbnN0YWxsZXJzKS4KKworKioqIFdoYXQgR3JlZyBDYW4gYW5kIENhbm5vdCBEbyBIZXJlCisqKiBDYW4qKjogR2VuZXJhdGUgY29kZSBjaGFuZ2VzIGFzIEdpdCBwYXRjaGVzLCBCYXNoL1Bvd2VyU2hlbGwgaW5zdGFsbGVycywgb3IgQmFzZTY0IHBheWxvYWRzLgorKiogQ2FuKio6IEdpdmUgZXhhY3QgYXBwbHkgY29tbWFuZHMgYW5kIHZlcmlmaWNhdGlvbiBzdGVwcy4KKyoqIENhbm5vdCoqOiBBdHRhY2ggcmVhbCBkb3dubG9hZGFibGUgZmlsZXMgaW4gdGhpcyBjaGF0IGVudmlyb25tZW50LgorKiogQ2Fubm90Kio6IFJlbWVtYmVyIGFjcm9zcyBjaGF0cyDigJQg
